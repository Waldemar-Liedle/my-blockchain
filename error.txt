 FAIL  wallet\index.test.js
  ● Wallet › creating a transaction › and doing the same transaction › doubles the sendAmount substracted from the wallet balance

    TypeError: transactionPool.existingTransaction is not a function

      27 |         }
      28 |
    > 29 |         let transaction = transactionPool.existingTransaction(this.publicKey);
      30 |
      31 |         if (transaction) {
      32 |             transaction.update(this, recipient, amount);

      at Wallet.createTransaction (wallet/index.js:29:43)
      at Object.beforeEach (wallet/index.test.js:24:34)

  ● Wallet › creating a transaction › and doing the same transaction › doubles the sendAmount substracted from the wallet balance

    TypeError: transactionPool.existingTransaction is not a function

      27 |         }
      28 |
    > 29 |         let transaction = transactionPool.existingTransaction(this.publicKey);
      30 |
      31 |         if (transaction) {
      32 |             transaction.update(this, recipient, amount);

      at Wallet.createTransaction (wallet/index.js:29:43)
      at Object.beforeEach (wallet/index.test.js:29:24)

  ● Wallet › creating a transaction › and doing the same transaction › doubles the sendAmount substracted from the wallet balance

    TypeError: Cannot read property 'outputs' of undefined

      32 |             it('doubles the sendAmount substracted from the wallet balance', () => {
      33 |                 expect(
    > 34 |                     transaction.outputs
      35 |                         .find(output => output.address === wallet.publicKey)
      36 |                 ).toEqual(wallet.balance - sendAmount * 2);
      37 |             });

      at Object.it (wallet/index.test.js:34:33)

  ● Wallet › creating a transaction › and doing the same transaction › clones the sendAmount output for the recipient

    TypeError: transactionPool.existingTransaction is not a function

      27 |         }
      28 |
    > 29 |         let transaction = transactionPool.existingTransaction(this.publicKey);
      30 |
      31 |         if (transaction) {
      32 |             transaction.update(this, recipient, amount);

      at Wallet.createTransaction (wallet/index.js:29:43)
      at Object.beforeEach (wallet/index.test.js:24:34)

  ● Wallet › creating a transaction › and doing the same transaction › clones the sendAmount output for the recipient

    TypeError: transactionPool.existingTransaction is not a function

      27 |         }
      28 |
    > 29 |         let transaction = transactionPool.existingTransaction(this.publicKey);
      30 |
      31 |         if (transaction) {
      32 |             transaction.update(this, recipient, amount);

      at Wallet.createTransaction (wallet/index.js:29:43)
      at Object.beforeEach (wallet/index.test.js:29:24)

  ● Wallet › creating a transaction › and doing the same transaction › clones the sendAmount output for the recipient

    TypeError: Cannot read property 'outputs' of undefined

      39 |             it('clones the sendAmount output for the recipient', () => {
      40 |                 expect(
    > 41 |                     transaction.outputs.filter(
      42 |                         output => output.address === recipient
      43 |                     ).map(output => output.amount)
      44 |                 ).toEqual([sendAmount, sendAmount]);

      at Object.it (wallet/index.test.js:41:33)




